var searchIndex = JSON.parse('{\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"libloader":{"doc":"","t":[14],"n":["create_libfn"],"q":["libloader"],"d":["lib_path: The path of dll fn_name: The function of dll’s …"],"i":[0],"f":[null],"p":[]},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":[13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,3,13,13,3,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["libloading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libloading::Error","","","","","","","","","libloading::changelog","","","","","","","","","","","","","","","","","","","","","","","","libloading::os","libloading::os::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","",""],"i":[1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,2,3,1,2,3,1,0,3,3,2,3,2,3,1,1,2,2,3,1,3,2,2,3,1,3,0,3,2,0,1,3,1,2,3,1,2,3,1,2,3,1,4,5,6,7,8,9,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,14,13,14,14,14,13,14,13,13,14,13,13,14,13,13,13,13,14,13,14,14,13,13,13,14,13,14,13,14,13,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["symbol",3]],["symbol",3]],[[["",0],["",0]]],[[["library",3]],["result",4,[["error",4]]]],[[["symbol",3]],["",0]],[[["library",3],["formatter",3]],["result",6]],[[["symbol",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["library",3]],["library",3]],[[]],[[]],[[["symbol",3],["",0]],["symbol",3]],[[["library",3]],["result",4,[["symbol",3],["error",4]]]],[[]],[[]],[[]],[[["symbol",3]],["symbol",3]],[[["asref",8,[["osstr",3]]]],["osstring",3]],[[["symbol",3,[["option",4]]]],["option",4,[["symbol",3]]]],[[["asref",8,[["osstr",3]]]],["result",4,[["library",3],["error",4]]]],null,[[["error",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["symbol",3]],["symbol",3]],[[["",0],["",0]]],[[["library",3]],["result",4,[["error",4]]]],[[["symbol",3]],["",0]],[[["library",3]]],[[["library",3],["formatter",3]],["result",6]],[[["symbol",3],["formatter",3]],["result",6]],[[["library",3]],["library",3]],[[]],[[]],[[["c_void",0]],["library",3]],[[["library",3]],["result",4,[["symbol",3],["error",4]]]],[[["library",3]],["result",4,[["symbol",3],["error",4]]]],[[]],[[]],[[["library",3]],["c_void",0]],[[["symbol",3]],["c_void",0]],[[["symbol",3,[["option",4]]]],["option",4,[["symbol",3]]]],[[["asref",8,[["osstr",3]]]],["result",4,[["library",3],["error",4]]]],[[["option",4],["c_int",6]],["result",4,[["library",3],["error",4]]]],[[],["library",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[4,"Error"],[3,"Library"],[3,"Symbol"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"],[3,"Library"],[3,"Symbol"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
